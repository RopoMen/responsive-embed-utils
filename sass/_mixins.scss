/*
  Credit: Partly idea is from Bootstrap and thereof Nicolas Gallagher and SUIT CSS.
*/

@mixin roy-responsive-embed() {
  position: relative;
  display: block;
  height: 0;
  padding: 0;
  overflow: hidden;
  width: 100%; /* for IE11 centering */
}

@mixin roy-responsive-item() {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  height: 100%;
  width: 100%;
  border: 0;
}

@mixin roy-responsive-item-padding($ratio_width: 16, $ratio_height: 9) {
	padding-bottom: ($ratio_height / $ratio_width) * 100%;
}

@mixin roy-responsive-embed-horizontal-center() {
  margin-left: auto;
  margin-right: auto;

  left: 0;
  right: 0;
}

@mixin roy-responsive-item-vertical-center($container_width: 100%, $container_height: 100%, $ratio_width: 16, $ratio_height: 9) {
  @if unit($container_height) == "%" {
    margin-top: -($ratio_height / $ratio_width) * ($container_height / 2);
  }
  @else {
    margin-top: -(get-maximum-embed-height($container_width, $container_height, $ratio_width, $ratio_height) / 2);
  }

  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
}

@mixin roy-adjust-embed-height($container_width, $container_height, $ratio_width: 16, $ratio_height: 9) {
  width: get-maximum-embed-width($container_width, $container_height, $ratio_width, $ratio_height);
  height: get-maximum-embed-height($container_width, $container_height, $ratio_width, $ratio_height);

  /**
    Remove padding based aspect ratio handling and use fixed size embed, because if container is wider,
    padding is overflowing below the video element and any absolutely positioned element using 'bottom'
    may drop too low.
  */
  padding-bottom: 0px!important;
}


